// <auto-generated />
using System;
using API.Inspecciones.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Inspecciones.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("inspeccion")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Inspecciones.Models.Inspeccion", b =>
                {
                    b.Property<string>("IdInspeccion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInspeccion");

                    b.HasIndex("Folio")
                        .IsUnique()
                        .HasFilter("[Folio] IS NOT NULL");

                    b.ToTable("Inspecciones", "inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.InspeccionCategoria", b =>
                {
                    b.Property<string>("IdInspeccionCategoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("IdCreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdInspeccion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspeccionFolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspeccionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInspeccionCategoria");

                    b.HasIndex("IdInspeccion");

                    b.ToTable("InspeccionesCategorias", "inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.InspeccionCategoriaItem", b =>
                {
                    b.Property<string>("IdInspeccionCategoriaItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FormularioTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormularioValor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdInspeccion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdInspeccionCategoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspeccionCategoriaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspeccionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInspeccionCategoriaItem");

                    b.HasIndex("IdInspeccion");

                    b.HasIndex("IdInspeccionCategoria");

                    b.ToTable("InspeccionesCategoriasItems", "inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.Unidad", b =>
                {
                    b.Property<string>("IdUnidad")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUnidadTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroEconomico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadTipoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnidad");

                    b.ToTable("Unidades", "inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.UnidadRegistro", b =>
                {
                    b.Property<string>("IdUnidadRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdRequerimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroEconomico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequerimientoFolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnidadRegistro");

                    b.ToTable("UnidadesRegistros", "inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.InspeccionCategoria", b =>
                {
                    b.HasOne("API.Inspecciones.Models.Inspeccion", "Inspeccion")
                        .WithMany("InspeccionesCategorias")
                        .HasForeignKey("IdInspeccion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("API.Inspecciones.Models.InspeccionCategoriaItem", b =>
                {
                    b.HasOne("API.Inspecciones.Models.Inspeccion", "Inspeccion")
                        .WithMany("InspeccionesCategoriasItems")
                        .HasForeignKey("IdInspeccion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API.Inspecciones.Models.InspeccionCategoria", "InspeccionCategoria")
                        .WithMany("InspeccionesCategoriasItems")
                        .HasForeignKey("IdInspeccionCategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Inspeccion");

                    b.Navigation("InspeccionCategoria");
                });

            modelBuilder.Entity("API.Inspecciones.Models.Inspeccion", b =>
                {
                    b.Navigation("InspeccionesCategorias");

                    b.Navigation("InspeccionesCategoriasItems");
                });

            modelBuilder.Entity("API.Inspecciones.Models.InspeccionCategoria", b =>
                {
                    b.Navigation("InspeccionesCategoriasItems");
                });
#pragma warning restore 612, 618
        }
    }
}
